[
  "tests/test_FileProcessor.py::test_read",
  "tests/test_FileProcessor.py::test_read_no_file",
  "tests/test_FileProcessor.py::test_write",
  "tests/test_Good.py::test_constructor",
  "tests/test_Good.py::test_tostring",
  "tests/test_Good.py::test_repr",
  "tests/test_Good.py::test_equals[a0-None-False]",
  "tests/test_Good.py::test_equals[a1-b1-True]",
  "tests/test_Good.py::test_equals[a2-b2-True]",
  "tests/test_Good.py::test_equals[a3-b3-True]",
  "tests/test_Good.py::test_equals[a4-b4-True]",
  "tests/test_Good.py::test_equals[a5-b5-False]",
  "tests/test_Good.py::test_update[a0-1-a.min_price() == a.max_price() == price]",
  "tests/test_Good.py::test_update[a1-2-a.max_price() == price]",
  "tests/test_Good.py::test_update[a2-0-a.min_price() == price]",
  "tests/test_Good.py::test_xml",
  "tests/test_GoodsStorage.py::test_constructor",
  "tests/test_GoodsStorage.py::test_add[None-storage.size() == 0]",
  "tests/test_GoodsStorage.py::test_add[a1-storage.size() == 1]",
  "tests/test_GoodsStorage.py::test_add[a2-storage.size() == 2]",
  "tests/test_GoodsStorage.py::test_add[a3-storage.size() == 2 and storage[1].min_price() == 4]",
  "tests/test_GoodsStorage.py::test_add[a4-storage.size() == 2 and storage[0].max_price() == 8]",
  "tests/test_GoodsStorage.py::test_extend",
  "tests/test_GoodsStorage.py::test_xml",
  "tests/test_GoodsStorage.py::test_tostring",
  "tests/test_WebSiteLoader.py::test_loader",
  "tests/test_XMLtoObjectConvertor.py::test_convertor"
]